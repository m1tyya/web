const { defineConfig } = require(`eslint-define-config`);
const { patternsJavascript } = require(`../utils/get-file-patterns`);
const prettierConfig = require(`../prettier.config`);

module.exports = defineConfig({
	overrides: [
		{
			files: patternsJavascript(),
			parser: `esprima`,
			plugins: [
				`etc`,
				`promise`,
				`autofix`,
				`canonical`,
				`destructuring`,
				`prettier`,
				`sort-class-members`,
				`sort-destructure-keys`,
				`sort`,
				`unicorn`,
			],
			rules: {
				'arrow-body-style': [`warn`, `as-needed`],
				'autofix/eqeqeq': [`warn`, `smart`],
				// 'autofix/no-confusing-arrow': `warn`,
				'autofix/prefer-destructuring': [
					`warn`,
					{
						array: false,
						object: true,
					},
				],
				'autofix/yoda': `warn`,
				curly: [`warn`, `all`],
				'etc/prefer-less-than': `warn`,
				'linebreak-style': [`warn`, `unix`],
				'no-case-declarations': `warn`,
				'no-dupe-class-members': `warn`,
				'no-dupe-keys': `warn`,
				'no-eval': `warn`,
				'no-extra-boolean-cast': [`warn`, { enforceForLogicalOperands: true }],
				'no-irregular-whitespace': `warn`,
				'no-iterator': `warn`,
				'no-lonely-if': `warn`,
				'no-loop-func': `warn`,
				'no-multi-assign': `warn`,
				'no-new-func': `warn`,
				'no-new-object': `warn`,
				'no-new-wrappers': `warn`,
				'no-param-reassign': `warn`,
				'no-unneeded-ternary': `warn`,
				'no-useless-escape': `warn`,
				'no-var': `warn`,
				'object-shorthand': `warn`,
				'one-var': [`warn`, `consecutive`],
				'one-var-declaration-per-line': [`warn`, `always`],
				'prefer-arrow-callback': `warn`,
				'prefer-const': `warn`,
				'prefer-exponentiation-operator': `warn`,
				'prefer-object-spread': `warn`,
				'prefer-rest-params': `warn`,
				'prefer-spread': `warn`,
				'prefer-template': `warn`,
				'prettier/prettier': [`warn`, prettierConfig],
				'promise/prefer-await-to-then': `warn`,
				'sort-class-members/sort-class-members': [
					`warn`,
					{
						order: [],
					},
				],
				'sort-destructure-keys/sort-destructure-keys': [
					`warn`,
					{
						caseSensitive: false,
					},
				],
				'spaced-comment': [
					`warn`,
					`always`,
					{
						markers: [`/`],
					},
				],
				'unicorn/consistent-function-scoping': `warn`,
				'unicorn/custom-error-definition': `warn`,
				'unicorn/error-message': `warn`,
				'unicorn/escape-case': `warn`,
				'unicorn/expiring-todo-comments': `warn`,
				'unicorn/explicit-length-check': `warn`,
				'unicorn/new-for-builtins': `warn`,
				'unicorn/no-array-callback-reference': `warn`,
				'unicorn/no-array-for-each': `warn`,
				'unicorn/no-array-push-push': `warn`,
				'unicorn/no-array-reduce': `warn`,
				'unicorn/no-await-expression-member': `warn`,
				'unicorn/no-console-spaces': `warn`,
				'unicorn/no-for-loop': `warn`,
				'unicorn/no-hex-escape': `warn`,
				'unicorn/no-instanceof-array': `warn`,
				'unicorn/no-keyword-prefix': [`warn`, { checkProperties: true, onlyCamelCase: false }],
				'unicorn/no-lonely-if': `warn`,
				'unicorn/no-negated-condition': `warn`,
				'unicorn/no-nested-ternary': `warn`,
				'unicorn/no-new-array': `warn`,
				'unicorn/no-new-buffer': `warn`,
				'unicorn/no-null': `warn`,
				'unicorn/no-thenable': `warn`,
				'unicorn/no-this-assignment': `warn`,
				'unicorn/no-typeof-undefined': `warn`,
				'unicorn/no-unnecessary-await': `warn`,
				'unicorn/no-unreadable-array-destructuring': `warn`,
				'unicorn/no-useless-spread': `warn`,
				'unicorn/no-useless-switch-case': `warn`,
				'unicorn/no-useless-undefined': `warn`,
				'unicorn/no-zero-fractions': `warn`,
				'unicorn/number-literal-case': `warn`,
				'unicorn/numeric-separators-style': `warn`,
				'unicorn/prefer-array-find': `warn`,
				'unicorn/prefer-array-flat-map': `warn`,
				'unicorn/prefer-array-index-of': `warn`,
				'unicorn/prefer-array-some': `warn`,
				'unicorn/prefer-at': [`warn`],
				'unicorn/prefer-date-now': `warn`,
				'unicorn/prefer-default-parameters': `warn`,
				'unicorn/prefer-includes': `warn`,
				'unicorn/prefer-logical-operator-over-ternary': `warn`,
				'unicorn/prefer-math-trunc': `warn`,
				'unicorn/prefer-negative-index': `warn`,
				'unicorn/prefer-node-protocol': `warn`,
				'unicorn/prefer-prototype-methods': `warn`,
				'unicorn/prefer-spread': `warn`,
				'unicorn/prefer-string-replace-all': `warn`,
				'unicorn/prefer-string-starts-ends-with': `warn`,
				'unicorn/prefer-string-trim-start-end': `warn`,
				'unicorn/prefer-switch': [
					`warn`,
					{
						emptyDefaultCase: `no-default-case`,
					},
				],
				'unicorn/prefer-ternary': [`warn`, `only-single-line`],
				'unicorn/prefer-type-error': `warn`,
				'unicorn/relative-url-style': [`warn`, `always`],
				'unicorn/require-array-join-separator': `warn`,
				'unicorn/require-number-to-fixed-digits-argument': `warn`,
				'unicorn/switch-case-braces': `warn`,
				'unicorn/template-indent': `warn`,
				'unicorn/text-encoding-identifier-case': `warn`,
				'unicorn/throw-new-error': `warn`,
			},
		},
	],
});
2;
